vdu: VDU base node for all instance nodes
---------------------------------------

Required properties:
 - compatible: should be "xlnx,vdu-1.0"
 - xlnx,core_clk: core clock, max freq is 800MHz
 - xlnx,mcu_clk: MCU clock, max freq is 571MHz
 - xlnx,enable_dpll: generate core clock and MCU clock
 - xlnx,ref_clk: reference clock input

Optional properties:
 - reset-gpios: The GPIO used to reset the VDU, if available. Need use this
                reset gpio when in design 'vdu_reset' is driven by gpio. See
                Documentation/devicetree/bindings/gpio/gpio.txt for details.

Example:
       myvdu: vdu@a4000000 {
              compatible = "xlnx,vdu-1.0";
              xlnx,core_clk = <800>;
              xlnx,mcu_clk = <571>;
              xlnx,enable_dpll;
              xlnx,ref_clk = <100>;
              reset-gpios = <0x12 0x1a 0x01>;
       };


al5d: VDU instance node
---------------------------------------

Required properties:
 - compatible: should be "al,al5d"
 - interrupt-names: interrupt names for the interrupt
 - interrupt-parent: phandle to interrupt controller
 - interrupts: interrupt number to the interrupt controller
 - reg: base address and size of the VDU instance
 - memory-region: phandle to the reserved-memory node. The VDU instance will
                  use the reserved memory instead of using the CMA pools to
		  allocate its memory
 - al,devicename: specifies the /dev/X name for the VDU instance
 - xlnx,vdu: phandle to the base node of the VDU instance


Example:
       al5d@a4020000 {
              compatible = "al,al5d";
              interrupt-names = "vdu_host_interrupt0";
              interrupt-parent = <0x5>;
              interrupts = <0x0 0x54 0x4>;
              reg = <0x0 0xa4020000 0x0 0x100000>;
              memory-region = <&ddr1_1>;
              al,devicename = "allegroDecodeIP0";
              xlnx,vdu = <&myvdu>;
       };

